job("Task6_Job1") {
description ("Pulls the code from GitHub")
  scm{
    github('akshitverma8191/task3_devops','master')
  }
  triggers {
        scm('* * * * *')
    }
  steps {
    shell('''sudo rm -rf /website
    sudo mkdir /website
    if ls | grep .html
    then
    sudo cp -r *.html /website/
    else
    sudo cp -r *.php /website/
    fi
    sudo rm -rf /kubeCode
    sudo mkdir /kubeCode
    sudo cp -r *.yml /kubeCode/''')
  }
}



job("Task6_Job2") {
description ("This Job is to deploy the code on top of Kubernetes")
  triggers {
    upstream('Task6_Job1','SUCCESS')
    }
    steps {
      shell('''kubectl delete all --all
kubectl delete pvc --all
if ls /website/ | grep .html
then
if
kubectl get pvc | grep htmlwebpvc
then
echo “pvc already exist”
kubectl apply -f /kubeCode/htmlwebpvc.yml
else
kubectl create -f /kubeCode/htmlwebpvc.yml
sleep 5
fi
if kubectl get deployment | grep myhtmlweb
then
echo “deployment already exist”
kubectl apply -f /kubeCode/htmlwebdeployment.yml
else
kubectl create -f /kubeCode/htmlwebdeployment.yml
sleep 15
kubectl cp /website/* $(kubectl get pods -o=jsonpath={.items[0].metadata.name}):/usr/local/apache2/htdocs/
fi
else
if
kubectl get pvc | grep phpwebpvc
then
echo “pvc already exist”
kubectl apply -f /kubeCode/phpwebpvc.yml
else
kubectl create -f /kubeCode/phpwebpvc.yml
sleep 5
fi
if kubectl get deployment | grep myphpweb
then
echo “deployment already exist”
kubectl apply -f /kubeCode/phpwebdeployment.yml
else
kubectl create -f /kubeCode/phpwebdeployment.yml
sleep 15
kubectl cp /website/* $(kubectl get pods -o=jsonpath={.items[0].metadata.name}):/var/www/html/
fi
fi''')
    }
}

job("Task6_Job3") {
description ("This job is to test the code")
  triggers {
    upstream('Task6_Job2','SUCCESS')
    }
    steps {
      shell('''export status=$(curl -s -o /dev/null -w "%{http_code}" http://192.168.99.100:31000)
if [ $status -eq 200 ]
then
exit 0
else
exit 1
fi''')
    }
}

buildPipelineView('Task6_Build_View') {
  title('Task6_Build_View')
  displayedBuilds(3)
  selectedJob('Task6_Job1')
  showPipelineParameters(true)
  refreshFrequency(2)
}